// Audio-Pi Websystem – Polkit-Regel
// Diese Datei wird vom Installationsskript mit dem tatsächlichen Dienstbenutzer ersetzt.
polkit.addRule(function(action, subject) {
    var allowedUser = "__AUDIO_PI_USER__";
    if (subject.user !== allowedUser) {
        return polkit.Result.NOT_HANDLED;
    }

    var actionId = String(action.id || "");

    function normalizeUnit(unit) {
        if (!unit) {
            return null;
        }
        var value = String(unit);
        if (value.endsWith(".service")) {
            return value;
        }
        return value + ".service";
    }

    var managedUnits = {
        "audio-pi.service": ["start", "stop", "restart"],
        "dnsmasq.service": ["start", "stop", "restart"],
        "hostapd.service": ["start", "stop", "restart"],
        "systemd-timesyncd.service": ["start", "stop", "restart"],
        "dhcpcd.service": ["start", "stop", "restart"],
        "audio-pi-iptables-restore.service": ["start", "stop", "restart"],
        "audio-pi-alsactl.service": ["start"]
    };

    if (actionId === "org.freedesktop.systemd1.manage-units") {
        var verb = String(action.lookup("verb") || action.lookup("operation") || "").toLowerCase();
        var unit = normalizeUnit(action.lookup("unit"));
        if (unit && managedUnits[unit]) {
            var allowedVerbs = managedUnits[unit];
            if (allowedVerbs.indexOf(verb) >= 0) {
                return polkit.Result.YES;
            }
        }
    }

    var hostnameActions = [
        "org.freedesktop.hostname1.set-static-hostname",
        "org.freedesktop.hostname1.set-hostname",
        "org.freedesktop.hostname1.set-chassis"
    ];
    if (hostnameActions.indexOf(actionId) >= 0) {
        return polkit.Result.YES;
    }

    if (actionId === "org.freedesktop.timedate1.set-time" ||
        actionId === "org.freedesktop.timedate1.set-ntp") {
        return polkit.Result.YES;
    }

    if (actionId === "org.freedesktop.login1.reboot" ||
        actionId === "org.freedesktop.login1.power-off") {
        return polkit.Result.YES;
    }

    return polkit.Result.NOT_HANDLED;
});
